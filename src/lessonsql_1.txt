--Task 1:Select all employees (names).
--IP: ok, solvedalmost properly, I requested only names with no sorting. Please also use tab for columns and put : to new row
--IP: I fixed comments
SELECT
    id,
    name_emp
FROM table_emp
ORDER BY name_emp
;

--Task 2:Select all employees (names) in reverse alphabetical order.
--IP: good. solved. the same suggestions as in task 1
SELECT
id,
name_emp
FROM table_emp
ORDER BY name_emp DESC;

--Task 3:Select only unique employee names. 
-- IP: no this is NOT CORRECT
SELECT
id,
name_emp
FROM table_emp
ORDER BY name_emp DISTINCT;

--Task 4:Show the average salary of employees. 
--IP: good. coreect. please fix grammar mistake only
SELECT
AVG(selery)
FROM table_emp;

--Task 5: Show the total salary of employees.
--IP: good. coreect. please fix grammar mistake only
SELECT
SUM(selery)
FROM table_emp;

--Task 6: Show number of employees.
--IP good. correct
SELECT
COUNT(*)
FROM  table_emp;

--Task 7: find only those employees whose names are repeated more than 2 times.
--IP: no, NOT CORRECT. use group by
SELECT
id,
name_emp
FROM table_emp
WHERE COUNT name_emp>2;

--Task 8:Ð¡hoose employees whose boss is john smith. 
--IP: not CORRECT. Use JOIN or proper sub-query
SELECT
id,
name_emp
FROM table_emp
WHERE status id_B IS NOT NULL(status john smith).
GROUP BY id_name_B;

--Task 9: find employees who do not have boss
--IP: yes, correct
SELECT
id,
name_emp
FROM table_emp
WHERE status id_name_B IS NULL;

-- Task 10:Find employees who have a nonexistent boss.
--IP: not correct
SELECT
id,
name_emp
FROM table_emp





